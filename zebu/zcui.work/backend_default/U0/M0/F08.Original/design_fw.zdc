# Emulation Verification Engineering (c) - XDC generator
# ------------------------------------------------------

#xdc_lib lib_zse_xc7v_8c_v1_xdc:f08_fx_macro
#xdc_addconst delay
set_max_delay -from [get_pins {design/zkprctrl/wrapper/srb_bridge/srb_bridge_srb_0/srb_data_rd_buf_*/Q}] -to [get_clocks CLK_fib_clk] -datapath_only [expr 10.00*10]
#xdc_addconst loc
create_pblock pblock_fxmacro
resize_pblock pblock_fxmacro -add {CLOCKREGION_X1Y5}
add_cells_to_pblock pblock_fxmacro [get_cells {design/zkprctrl/wrapper/fib* design/zkprctrl/wrapper/srb*}]
create_pblock pblock_fx_macro_slr
resize_pblock pblock_fx_macro_slr -add {CLOCKREGION_X0Y3:CLOCKREGION_X1Y5}
#xdc_addconst clock
create_clock -name CLK_design_zkprctrl_wrapper_fib_bridge_rx_u_xst_wrapper_0_socket_lvds_sys_slave_0_u_xst_wrapper_0_socket_lvds_gp_in_0_u_xst_wrapper_0_clki_dv -period [expr [expr 10.00/3]*3] [get_pins {design/zkprctrl/wrapper/fib_bridge_rx/u_xst_wrapper_0/socket_lvds_sys_slave_0/u_xst_wrapper_0/socket_lvds_gp_in_0/u_xst_wrapper_0/bufr_0/O}]
#xdc_addconst async
set_clock_groups -asynchronous -name GRP_design_zkprctrl_wrapper_fib_bridge_rx_u_xst_wrapper_0_socket_lvds_sys_slave_0_u_xst_wrapper_0_socket_lvds_gp_in_0_u_xst_wrapper_0_clki_dv -group [get_clocks CLK_design_zkprctrl_wrapper_fib_bridge_rx_u_xst_wrapper_0_socket_lvds_sys_slave_0_u_xst_wrapper_0_socket_lvds_gp_in_0_u_xst_wrapper_0_clki_dv]
#xdc_addconst clock
create_clock -name CLK_sys_idel_clk  -period 5.0                           [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_idly_0/bufg_0/O}]
create_clock -name CLK_fib_clk       -period 10.00           [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_bus_dut_0/fib_clk}]
create_clock -name CLK_fib_clk_hs    -period [expr 10.00/3]  [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_bus_dut_0/fib_clk_hs}]
create_clock -name CLK_srb_clk       -period [expr 10.00*10] [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_bus_dut_0/srb_clk}]
create_clock -name CLK_sys_xclk      -period 2.22                 [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk_0/sys_xclk}]
create_clock -name CLK_sys_xclk_dv4  -period [expr 2.22*4]        [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk_0/sys_xclk_dv4}]
create_clock -name CLK_sys_xclk2     -period 2.22                [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk2_0/sys_xclk2}]
create_clock -name CLK_sys_xclk2_dv4 -period [expr 2.22*4]       [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk2_0/sys_xclk2_dv4}]
#xdc_addconst gen_clock
create_generated_clock -name CLK_sys_idel_clk_dv2 -divide_by 2 -source [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_idel_clk}] [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_idel_clk_dv2}]
create_generated_clock -name CLK_sys_idel_clk_dv4 -divide_by 4 -source [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_idel_clk}] [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_idel_clk_dv4}]
create_generated_clock -name CLK_sys_idel_clk_dv8 -divide_by 8 -source [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_idel_clk}] [get_pins {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_idel_clk_dv8}]
#xdc_addconst async
set_clock_groups -asynchronous -name GRP_sys_idel_clk    -group [get_clocks CLK_sys_idel_clk]
set_clock_groups -asynchronous -name GRP_sys_idel_clk_dv -group [get_clocks -include_generated_clocks {CLK_sys_idel_clk_dv2 CLK_sys_idel_clk_dv4 CLK_sys_idel_clk_dv8}]
set_clock_groups -asynchronous -name GRP_fib_clk         -group [get_clocks -include_generated_clocks CLK_fib_clk]
set_clock_groups -asynchronous -name GRP_fib_clk_hs      -group [get_clocks -include_generated_clocks CLK_fib_clk_hs]
set_clock_groups -asynchronous -name GRP_srb_clk         -group [get_clocks -include_generated_clocks CLK_srb_clk]
set_clock_groups -asynchronous -name GRP_sys_xclk        -group [get_clocks -include_generated_clocks {CLK_sys_xclk CLK_sys_xclk_dv4}]
set_clock_groups -asynchronous -name GRP_sys_xclk2       -group [get_clocks -include_generated_clocks {CLK_sys_xclk2 CLK_sys_xclk2_dv4}]
#xdc_addconst delay
set_max_delay -through [get_nets {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sock_ce[*]}]                 [expr 10.00*10]
set_max_delay -through [get_nets {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sock_sr[*]}]                 [expr 10.00*10]
set_max_delay -through [get_nets {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sock_clko_en[*]}]            [expr 10.00*10]
set_max_delay -through [get_nets {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk_0/bufgctrl_en}]  [expr 10.00*10]
set_max_delay -through [get_nets {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk2_0/bufgctrl_en}] [expr 10.00*10]
#xdc_addconst clock_dedicated_route
set_property CLOCK_DEDICATED_ROUTE BACKBONE [get_nets -top_net_of_hierarchical_group -segments {design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sys_xclk2_in}]
#xdc_addconst loc
set_property LOC MMCME2_ADV_X0Y5 [get_cells design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk_0/series7_pll_xclk]   ; # SLR 1 Top    MMCM05
set_property LOC MMCME2_ADV_X0Y4 [get_cells design/zkprctrl/wrapper/sysclk_mxfx/u_xst_wrapper_0/sysclk_xclk2_0/series7_pll_xclk]  ; # SLR 1 Bottom MMCM04
